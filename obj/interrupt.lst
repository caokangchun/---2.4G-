C51 COMPILER V9.01   INTERRUPT                                                             11/06/2018 09:42:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN .\obj\interrupt.obj
COMPILER INVOKED BY: D:\Keil_v511\C51\BIN\C51.EXE code\app\src\interrupt.c LARGE BROWSE INTVECTOR(0X1800) INCDIR(.\code\
                    -app\inc;.\code\driver\inc;.\code\system\inc;.\code\usb) DEFINE(__KEIL_C51__) DEBUG OBJECTEXTEND PRINT(.\obj\interrupt.ls
                    -t) OBJECT(.\obj\interrupt.obj)

line level    source

   1          
   2          #include "includes.h"
   3          
   4          //------------------------------------------------------------------------
   5          //      Description     :       interrupt0 handler
   6          //      Parameters      :       none
   7          //      Return          :       none
   8          //      Author          :       Sycreader
   9          //      Date            :       2016 - 05 - 31
  10          //------------------------------------------------------------------------
  11          void PORT0_Handler(void) interrupt 0
  12          {
  13   1              /* port0 interrupt -------------------------------------------------*/
  14   1      }
  15          
  16          
  17          //------------------------------------------------------------------------
  18          //      Description     :       interrupt1 handler
  19          //      Parameters      :       none
  20          //      Return          :       none
  21          //      Author          :       Sycreader
  22          //      Date            :       2016 - 05 - 31
  23          //------------------------------------------------------------------------
  24          void PORT1_Handler(void) interrupt 1
  25          {       
  26   1              /* port1 interrupt -------------------------------------------------*/
  27   1      }
  28          
  29          
  30          //------------------------------------------------------------------------
  31          //      Description     :       interrupt2 handler
  32          //      Parameters      :       none
  33          //      Return          :       none
  34          //      Author          :       Sycreader
  35          //      Date            :       2016 - 05 - 31
  36          //------------------------------------------------------------------------
  37          void PORT2_Handler(void) interrupt 2
  38          {       
  39   1              /* port2 interrupt -------------------------------------------------*/
  40   1      }
  41          
  42          //------------------------------------------------------------------------
  43          //      Description     :       interrupt3 handler
  44          //      Parameters      :       none
  45          //      Return          :       none
  46          //      Author          :       Sycreader
  47          //      Date            :       2016 - 05 - 31
  48          //------------------------------------------------------------------------
  49          void PORT3_Handler(void) interrupt 3
  50          {       
  51   1              /* port3 interrupt -------------------------------------------------*/
  52   1      }
  53          
C51 COMPILER V9.01   INTERRUPT                                                             11/06/2018 09:42:59 PAGE 2   

  54          idata volatile UINT8 delay_tick;
  55          //------------------------------------------------------------------------
  56          //      Description     :       interrupt4 handler
  57          //      Parameters      :       none
  58          //      Return          :       none
  59          //      Author          :       Sycreader
  60          //      Date            :       2016 - 05 - 31
  61          //------------------------------------------------------------------------
  62          void TIMER0_Handler(void) interrupt 4
  63          {
  64   1          BOOL sfrb_bak = SFRB; // backup status
  65   1              
  66   1              /* TIMER0 interrupt -------------------------------------------------*/
  67   1          _sfrb_bank1();          // Switch Bank1
  68   1              T0CON &= ~ BIT_MASK(7); // Clear TOV
  69   1          //_sfrb_bank0();          // Switch Bank0
  70   1          
  71   1          // for test:
  72   1              //test_pin0 = !test_pin0;
  73   1              
  74   1              delay_tick++;
  75   1              
  76   1      #ifdef _UART2USB
  77   1              #ifdef _RF_HOST
                      ad_t++;
                      rf_host.idleout++;
                      rf_host.tx_out++;
                      rf_host.same_out++;
                      if(rf_host.same_out > 6500)
                      {
                              rf_host.same_out = 6500;
                      }
                      if(uart.state != RECV_IDLE)
                      {
                              if(uart.time_out != 0)
                              {
                                      uart.time_out--;
                                      if(0 == uart.time_out)
                                      {
                                              /* receive data timeout */
                                              if(RECV_DATA == uart.state)
                                              {
                                                      //rf_host.tx_out = 0;
                                                      //test_pin2 = !test_pin2;
                                                      uart.data_ok = TRUE;
                                              }
                                              /* overflow data timeout */
                                              else if(RECV_STOP == uart.state)
                                              {
                                                      //uart.index = 0;
                                              }
                                              
                                              uart.state = RECV_IDLE;
                                      }
                              }
                      }
                      #else
 111   1              rf_slave.rx_tout++;
 112   1              /* clear pkt_cnt for idle */
 113   1              if(rf_slave.clear_t != 0)
 114   1              {
 115   2                      rf_slave.clear_t--;
C51 COMPILER V9.01   INTERRUPT                                                             11/06/2018 09:42:59 PAGE 3   

 116   2                      if(0 == rf_slave.clear_t)
 117   2                      {
 118   3                              //rf_slave.pkt_id = INIT_ID;
 119   3                      }
 120   2              }
 121   1              beep_task();
 122   1              #endif
 123   1      #endif /* _UART2USB */
 124   1              
 125   1          SFRB = sfrb_bak; // restore status
 126   1      }
 127          
 128          //------------------------------------------------------------------------
 129          //      Description     :       interrupt5 handler
 130          //      Parameters      :       none
 131          //      Return          :       none
 132          //      Author          :       Sycreader
 133          //      Date            :       2016 - 05 - 31
 134          //------------------------------------------------------------------------
 135          void TIMER1_Handler(void) interrupt 5
 136          {       
 137   1          BOOL sfrb_bak = SFRB; // backup status
 138   1              
 139   1              /* TIMER1 interrupt -------------------------------------------------*/
 140   1              _sfrb_bank1();           // Switch Bank1
 141   1              T1CON &= ~(BIT_MASK(7)); // Clear TOV
 142   1          _sfrb_bank0();           // Switch Bank0
 143   1          // for test:
 144   1          //test_pin1 = !test_pin1;
 145   1          
 146   1          SFRB = sfrb_bak; // restore status
 147   1      }
 148          
 149          //------------------------------------------------------------------------
 150          //      Description     :       interrupt9 handler
 151          //      Parameters      :       none
 152          //      Return          :       none
 153          //      Author          :       Sycreader
 154          //      Date            :       2016 - 05 - 31
 155          //------------------------------------------------------------------------
 156          void WDT_Handler(void) interrupt 9
 157          {       
 158   1          BOOL sfrb_bak = SFRB; // backup status
 159   1          
 160   1              /* WDT interrupt -------------------------------------------------*/
 161   1          _sfrb_bank1();                              // Switch Bank1
 162   1          if(WDTCON & BIT_MASK(7))
 163   1          {
 164   2              /* Write protect Key first */
 165   2                      WDTCNT = WDT_KEY;
 166   2      
 167   2                      /* Clear WDT OV flag */
 168   2              WDTCON &= ~ BIT_MASK(7);
 169   2                      
 170   2                      /* Clear WDT CNT */
 171   2                      WDTCNT = 0;
 172   2          }
 173   1          _sfrb_bank0();              // Switch Bank0
 174   1          // for test:
 175   1          //test_pin0 = !test_pin0;
 176   1          
 177   1          SFRB = sfrb_bak; // restore status
C51 COMPILER V9.01   INTERRUPT                                                             11/06/2018 09:42:59 PAGE 4   

 178   1      }
 179          
 180          //------------------------------------------------------------------------
 181          //      Description     :       interrupt10 handler
 182          //      Parameters      :       none
 183          //      Return          :       none
 184          //      Author          :       Sycreader
 185          //      Date            :       2016 - 05 - 31
 186          //------------------------------------------------------------------------
 187          void ADC_Handler(void) interrupt 10
 188          {       
 189   1              /* ADC interrupt -------------------------------------------------*/
 190   1      }
 191          
 192          //------------------------------------------------------------------------
 193          //      Description     :       interrupt11 handler
 194          //      Parameters      :       none
 195          //      Return          :       none
 196          //      Author          :       Sycreader
 197          //      Date            :       2016 - 05 - 31
 198          //------------------------------------------------------------------------
 199          void UART_Handler(void) interrupt 11
 200          {       
 201   1              UINT8 buf;
 202   1              
 203   1          BOOL sfrb_bak = SFRB; // backup status
 204   1              
 205   1              /* UART interrupt -------------------------------------------------*/
 206   1          _sfrb_bank1();                      // Switch Bank1
 207   1              if(UT0RF)                               // UART rx data
 208   1              {
 209   2                      UT0RF = 0;
 210   2                      buf = UT0BUF;
 211   2                      
 212   2              #ifdef _UART2USB
 213   2                      //uart_receive(buf);
 214   2              #endif /* _UART2USB */
 215   2              }
 216   1          _sfrb_bank0();                      // Switch Bank0
 217   1          // for test:
 218   1          //test_pin0 = !test_pin0;
 219   1          
 220   1          SFRB = sfrb_bak; // restore status
 221   1      }
 222          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      1    ----
   BIT SIZE         =   ----       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
